If the `python3` command was unavailable, we would see output like

```
/usr/bin/which: no python3 in (/cm/shared/apps/slurm/current/sbin:/cm/shared/apps/slurm/current/bin:/cm/local/apps/gcc/9.2.0/bin:/cm/local/apps/environment-modules/4.4.0//bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin:/sbin:/usr/sbin:/cm/local/apps/environment-modules/4.4.0/bin:/opt/dell/srvadmin/bin:/bsuhome/{{ site.remote.user }}/.local/bin:/bsuhome/{{ site.remote.user }}/bin)
```
{: .output}

Note that this wall of text is really a list, with values separated
by the `:` character.

However, in our case we do have an existing `python3` available so we see

```
/usr/bin/python3
```
{: .output}

We need a different Python than the system provided one though, so let us load
a module to access it.
